// * = $1000
// 
//            lda #$00      ; Put the value 0 in accumulator
//            sta $d020     ; Put value of acc in $d020
//            sta $d021     ; Put value of acc in $d021
//            tax           ; Put value of acc in x reg
//            lda $20       ; Put the value $20 in acc
// clrloop:   sta $0400,x   ; Put value of acc in $0400 + value in x reg
//            sta $0500,x   
//            sta $0600,x   
//            sta $0700,x
//            dex            ; Decrement value in x reg
//            bne clrloop    ; If not zero, branch to clrloop

address $1000
screen1 at $400
screen2 at $500
screen3 at $600
screen4 at $700

// a = 0
c64.background = x = 0
c64.foreground = x
a = $20

clrloop:
	screen1[x] = a
	screen2[x] = a
	screen3[x] = a
	screen4[x] = a
	x--
	if not zero goto clrloop
	end

// v0.1
clrloop:
	@$400[x] = a
	@$500[x] = a
	@$600[x] = a
	@$700[x] = a
	x--
	if not zero goto clrloop
	end

// v>0.1
loop
	@$400[x] = a
	@$500[x] = a
	@$600[x] = a
	@$700[x] = a
	x--
	until zero

x = 255
while not zero
	@$400[x] = a
	@$500[x] = a
	@$600[x] = a
	@$700[x] = a
	x++
	end
